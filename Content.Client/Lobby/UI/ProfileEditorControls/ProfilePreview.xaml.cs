using Content.Client.Sprite;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Client.Utility;
using Robust.Shared.Player;
using Robust.Shared.Prototypes;

namespace Content.Client.Lobby.UI.ProfileEditorControls;

[GenerateTypedNameReferences]
public sealed partial class ProfilePreview : BoxContainer
{
    private IEntityManager _entityManager = default!;

    private HumanoidProfileEditor? _editor;

    private bool _imaging;

    private Direction _previewRotation = Direction.North;

    public ProfilePreview()
    {
        RobustXamlLoader.Load(this);
        SpriteRotateLeft.OnPressed += OnRotateLeft;
        SpriteRotateRight.OnPressed += OnRotateRight;
    }

    public void Initialize(HumanoidProfileEditor profileEditor, IEntityManager entMan, IClientPreferencesManager prefMan, IPrototypeManager protoMan, ISharedPlayerManager playerMan)
    {
        _editor = profileEditor;
        _entityManager = entMan;
        SpriteView.Initialize(prefMan, protoMan, entMan, playerMan);
    }

    private void OnRotateLeft(BaseButton.ButtonEventArgs obj)
    {
        _previewRotation = _previewRotation.TurnCw();
        SetPreviewRotation(_previewRotation);
    }

    private void OnRotateRight(BaseButton.ButtonEventArgs obj)
    {
        _previewRotation = _previewRotation.TurnCcw();
        SetPreviewRotation(_previewRotation);
    }

    private void SetPreviewRotation(Direction direction)
    {
        SpriteView.OverrideDirection = (Direction) ((int) direction % 4 * 2);
    }

    public void ReloadPreview()
    {
        if (_editor?.Profile == null)
            return;

        SpriteView.LoadPreview(_editor.Profile, _editor?.JobOverride, _editor?.ShouldShowClothes ?? true);
    }

    public void ReloadProfilePreview()
    {
        if (_editor?.Profile == null)
            return;

        SpriteView.ReloadProfilePreview(_editor.Profile);
    }

    public async void ExportImage()
    {
        if (_imaging)
            return;

        var dir = SpriteView.OverrideDirection ?? Direction.South;

        // I tried disabling the button but it looks sorta goofy as it only takes a frame or two to save
        _imaging = true;
        await _entityManager.System<ContentSpriteSystem>().Export(SpriteView.PreviewDummy, dir, includeId: false);
        _imaging = false;
    }
}
